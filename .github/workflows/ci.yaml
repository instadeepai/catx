name: ci

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: instadeepai/catx

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push tool Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          target: tool-image
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tool:${{github.ref_name}}"
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  linters:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/instadeepai/catx/tool:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run pre-commits
        run: |
          pre-commit run --all-files

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/instadeepai/catx/tool:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run pytests
        run: |
          coverage run -m pytest -vv --junit-xml=test-results.xml tests/

      - name: Checking coverage threshold
        run: |
          coverage report --fail-under=95

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "./test-results.xml"
